# Startup configuration setting ARCH Linux yubikey
openssl_conf = openssl_init

[openssl_init]
engines = engine_section

[engine_section]
pkcs11 = pkcs11_section

[pkcs11_section]
engine_id = pkcs11
#dynamic_path = /usr/lib/engines-1.1/libpkcs11.so
MODULE_PATH = /usr/lib/pkcs11/opensc-pkcs11.so # don't forget the config file for the PKCS#11 module
#init = 0

# ---------------------------------------------------------------------
# we use 'ca' as the default section because we're usign the ca command
[ ca ]
default_ca = clug_ca

[ clug_ca ]
#  a text file containing the next serial number to use in hex. Mandatory.
#  This file must be present and contain a valid serial number.
certs = ./certs
serial = ./serial
database = ./index.txt
new_certs_dir = ./certs

# basic file location 
certificate = ./certs/intermediate_cert.pem

# crl confoguration
crl_dir = ./crl
crlnumber = ./crlnumber
crl = crl/cacrl.pem
crl_extensions = crl_ext
default_crl_days = 30

# basic configuration 
default_md = sha512
default_days = 600


# a section with a set of variables corresponding to DN fields
policy = clug_ca_policy

[ clug_ca_policy ]
countryName = match
stateOrProvinceName = match
organizationName = match
organizationalUnitName = optional
commonName = supplied
emailAddress = supplied

[ clug_subca_policy ]
countryName = supplied
stateOrProvinceName = optional
organizationName = match
organizationalUnitName = optional
commonName = supplied
emailAddress = supplied


[ certificate_extensions ]
basicConstraints  = CA:false

[ req ]
default_bits            = 2048
default_md		= sha512
distinguished_name      = req_distinguished_name
#attributes              = req_attributes
x509_extensions 	= v3_ca # The extentions to add to the self signed cert


[ req_distinguished_name ]
countryName                     = Country Name (2 letter code)
countryName_default             = PL
countryName_min                 = 2
countryName_max                 = 3

stateOrProvinceName             = State or Province Name (full name)
stateOrProvinceName_default     = malopolska

localityName                    = Locality Name (eg, city)
localityName_default            = Cracow

0.organizationName              = Organization Name (eg, company)
0.organizationName_default      = Cracow Linux Users Group

commonName                      = Common Name (eg, YOUR name)
commonName_max                  = 64

emailAddress                    = Email Address
emailAddress_max                = 64

[ v3_ca ]
subjectKeyIdentifier=hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints=critical,CA:true,pathlen:2
keyUsage=critical,keyCertSign,cRLSign,digitalSignature
nameConstraints=critical,@nc

[ v3_intermediate_ca ]
subjectKeyIdentifier=hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints=critical,CA:true,pathlen:0
keyUsage=critical,keyCertSign,cRLSign,digitalSignature
nameConstraints=critical,@nc

[ nc ]
permitted;email.0=ca@clug.space.systems
permitted;URI.0=https://clug.space

[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = client, email
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = server
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier=keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning

